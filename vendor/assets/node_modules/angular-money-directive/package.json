{
  "name": "angular-money-directive",
  "version": "1.1.0",
  "description": "AngularJS directive to validate money inputs",
  "dependencies": {},
  "devDependencies": {
    "karma": "~0.12.6",
    "karma-mocha": "~0.1.3",
    "karma-phantomjs-launcher": "~0.1.4",
    "mocha": "~1.18.2",
    "chai": "~1.9.1",
    "karma-chai": "~0.1.0"
  },
  "scripts": {
    "test": "./node_modules/karma/bin/karma start --single-run"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/fiestah/angular-money-directive.git"
  },
  "author": {
    "name": "Marvin Tam",
    "email": "marvin@fiestah.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/fiestah/angular-money-directive/issues"
  },
  "homepage": "https://github.com/fiestah/angular-money-directive",
  "gitHead": "6980a4da96f00878864995eab7f4a42fa03a03b7",
  "readme": "# angular-money-directive\n\n[![Build Status](http://img.shields.io/travis/fiestah/angular-money-directive.svg)](http://travis-ci.org/fiestah/angular-money-directive)\n\n[Quick Demo](https://fiestah.github.io/angular-money-directive/)\n\nThis directive validates monetary inputs in \"42.53\" format (some additional work is needed for \"32,00\" European formats). Note that this is _not_ designed to work with currency symbols. It largely behaves like Angular's implementation of `type=\"number\"`.\n\nIt does a few things:\n\n- Prevents entering non-numeric characters\n- Prevents entering the minus sign when `min >= 0`\n- Supports `min` and `max` like in `<input type=\"number\">`\n- Rounds the model value by `precision`, e.g. `42.219` will be rounded to `42.22` by default\n- On `blur`, the input field is auto-formatted. Say if you enter `42`, it will be formatted to `42.00`\n\n\n## Usage:\n\n```\n$ bower install angular-money-directive\n```\n\nThen include it as a dependency in your app.\n```\nangular.module('myApp', ['fiestah.money'])\n```\n\n### Attributes:\n\n- `money`: _required_\n- `ng-model`: _required_\n- `type`: Set to `text` or just leave it out. Do _not_ set to `number`.\n- `min`: _optional_ Defaults to `0`.\n- `max`: _optional_ Not enforced by default\n- `precision`: _optional_ Defaults to `2`. Set to `-1` to disable rounding\n\nBasic example:\n\n``` html\n<input type=\"text\" ng-model=\"model.price\" money>\n```\n\n`min`, `max` and `precision` can be set dynamically in $scope:\n\n``` html\n<input type=\"text\" ng-model=\"model.price\" money min=\"{{min}}\">\n```\n\n## Tests:\n\n1. Install test deps: `npm install` and `bower install`\n1. Run: `./node_modules/karma/bin/karma start`\n",
  "readmeFilename": "README.md",
  "_id": "angular-money-directive@1.1.0",
  "_shasum": "fa3b8f8fced3b743c476eba9a44bd26c5e756ad2",
  "_from": "../../../../var/folders/sy/ldppy63577q6kgr96t3w_9840000gn/T/npm-22474-fc039099/git-cache-9ece2b3a691f/6980a4da96f00878864995eab7f4a42fa03a03b7",
  "_resolved": "git+https://github.com/fiestah/angular-money-directive#6980a4da96f00878864995eab7f4a42fa03a03b7"
}
